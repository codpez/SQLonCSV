Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GROUP

Grammar

Rule 0     S' -> statement
Rule 1     statement -> SET DATA FROM FILE path eos
Rule 2     path -> PATH
Rule 3     aggregate_function -> COUNT LPAREN expression RPAREN
Rule 4     expression -> IDENTIFIER
Rule 5     expression -> ASTERISK
Rule 6     statement -> SELECT columns FROM table_reference optional_clauses eos
Rule 7     statement -> INSERT INTO table LPAREN columns RPAREN VALUES LPAREN values RPAREN eos
Rule 8     statement -> UPDATE table SET column EQUALS value WHERE condition eos
Rule 9     statement -> DELETE FROM table WHERE condition eos
Rule 10    join_clause -> INNER JOIN IDENTIFIER ON join_condition
Rule 11    join_condition -> IDENTIFIER EQUALS IDENTIFIER
Rule 12    table_reference -> IDENTIFIER
Rule 13    table_reference -> IDENTIFIER IDENTIFIER
Rule 14    table_reference -> table_reference join_clause
Rule 15    table_reference -> empty
Rule 16    columns -> columns COMMA column
Rule 17    columns -> ASTERISK
Rule 18    columns -> column
Rule 19    column -> IDENTIFIER
Rule 20    column -> IDENTIFIER DOT IDENTIFIER
Rule 21    column -> aggregate_function
Rule 22    column -> column AS IDENTIFIER
Rule 23    table -> IDENTIFIER
Rule 24    eos -> SEMICOLON
Rule 25    values -> values COMMA value
Rule 26    values -> value
Rule 27    value -> NUMBER
Rule 28    value -> STRING
Rule 29    optional_clauses -> where_clause limit_clause
Rule 30    optional_clauses -> where_clause order_clause
Rule 31    optional_clauses -> limit_clause
Rule 32    optional_clauses -> order_clause
Rule 33    optional_clauses -> where_clause
Rule 34    optional_clauses -> empty
Rule 35    condition -> column EQUALS value
Rule 36    condition -> column GREATER NUMBER
Rule 37    condition -> column LESS NUMBER
Rule 38    condition -> condition logical condition
Rule 39    where_clause -> WHERE condition
Rule 40    limit_clause -> LIMIT NUMBER
Rule 41    order_clause -> ORDER BY column
Rule 42    empty -> <empty>
Rule 43    logical -> AND
Rule 44    logical -> OR

Terminals, with rules where they appear

AND                  : 43
AS                   : 22
ASTERISK             : 5 17
BY                   : 41
COMMA                : 16 25
COUNT                : 3
DATA                 : 1
DELETE               : 9
DOT                  : 20
EQUALS               : 8 11 35
FILE                 : 1
FROM                 : 1 6 9
GREATER              : 36
GROUP                : 
IDENTIFIER           : 4 10 11 11 12 13 13 19 20 20 22 23
INNER                : 10
INSERT               : 7
INTO                 : 7
JOIN                 : 10
LESS                 : 37
LIMIT                : 40
LPAREN               : 3 7 7
NUMBER               : 27 36 37 40
ON                   : 10
OR                   : 44
ORDER                : 41
PATH                 : 2
RPAREN               : 3 7 7
SELECT               : 6
SEMICOLON            : 24
SET                  : 1 8
STRING               : 28
UPDATE               : 8
VALUES               : 7
WHERE                : 8 9 39
error                : 

Nonterminals, with rules where they appear

aggregate_function   : 21
column               : 8 16 18 22 35 36 37 41
columns              : 6 7 16
condition            : 8 9 38 38 39
empty                : 15 34
eos                  : 1 6 7 8 9
expression           : 3
join_clause          : 14
join_condition       : 10
limit_clause         : 29 31
logical              : 38
optional_clauses     : 6
order_clause         : 30 32
path                 : 1
statement            : 0
table                : 7 8 9
table_reference      : 6 14
value                : 8 25 26 35
values               : 7 25
where_clause         : 29 30 33

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . SET DATA FROM FILE path eos
    (6) statement -> . SELECT columns FROM table_reference optional_clauses eos
    (7) statement -> . INSERT INTO table LPAREN columns RPAREN VALUES LPAREN values RPAREN eos
    (8) statement -> . UPDATE table SET column EQUALS value WHERE condition eos
    (9) statement -> . DELETE FROM table WHERE condition eos

    SET             shift and go to state 2
    SELECT          shift and go to state 3
    INSERT          shift and go to state 4
    UPDATE          shift and go to state 5
    DELETE          shift and go to state 6

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> SET . DATA FROM FILE path eos

    DATA            shift and go to state 7


state 3

    (6) statement -> SELECT . columns FROM table_reference optional_clauses eos
    (16) columns -> . columns COMMA column
    (17) columns -> . ASTERISK
    (18) columns -> . column
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    ASTERISK        shift and go to state 10
    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    columns                        shift and go to state 8
    column                         shift and go to state 9
    aggregate_function             shift and go to state 12

state 4

    (7) statement -> INSERT . INTO table LPAREN columns RPAREN VALUES LPAREN values RPAREN eos

    INTO            shift and go to state 14


state 5

    (8) statement -> UPDATE . table SET column EQUALS value WHERE condition eos
    (23) table -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    table                          shift and go to state 15

state 6

    (9) statement -> DELETE . FROM table WHERE condition eos

    FROM            shift and go to state 17


state 7

    (1) statement -> SET DATA . FROM FILE path eos

    FROM            shift and go to state 18


state 8

    (6) statement -> SELECT columns . FROM table_reference optional_clauses eos
    (16) columns -> columns . COMMA column

    FROM            shift and go to state 19
    COMMA           shift and go to state 20


state 9

    (18) columns -> column .
    (22) column -> column . AS IDENTIFIER

    FROM            reduce using rule 18 (columns -> column .)
    COMMA           reduce using rule 18 (columns -> column .)
    RPAREN          reduce using rule 18 (columns -> column .)
    AS              shift and go to state 21


state 10

    (17) columns -> ASTERISK .

    FROM            reduce using rule 17 (columns -> ASTERISK .)
    COMMA           reduce using rule 17 (columns -> ASTERISK .)
    RPAREN          reduce using rule 17 (columns -> ASTERISK .)


state 11

    (19) column -> IDENTIFIER .
    (20) column -> IDENTIFIER . DOT IDENTIFIER

    AS              reduce using rule 19 (column -> IDENTIFIER .)
    FROM            reduce using rule 19 (column -> IDENTIFIER .)
    COMMA           reduce using rule 19 (column -> IDENTIFIER .)
    RPAREN          reduce using rule 19 (column -> IDENTIFIER .)
    EQUALS          reduce using rule 19 (column -> IDENTIFIER .)
    GREATER         reduce using rule 19 (column -> IDENTIFIER .)
    LESS            reduce using rule 19 (column -> IDENTIFIER .)
    SEMICOLON       reduce using rule 19 (column -> IDENTIFIER .)
    DOT             shift and go to state 22


state 12

    (21) column -> aggregate_function .

    AS              reduce using rule 21 (column -> aggregate_function .)
    FROM            reduce using rule 21 (column -> aggregate_function .)
    COMMA           reduce using rule 21 (column -> aggregate_function .)
    RPAREN          reduce using rule 21 (column -> aggregate_function .)
    EQUALS          reduce using rule 21 (column -> aggregate_function .)
    GREATER         reduce using rule 21 (column -> aggregate_function .)
    LESS            reduce using rule 21 (column -> aggregate_function .)
    SEMICOLON       reduce using rule 21 (column -> aggregate_function .)


state 13

    (3) aggregate_function -> COUNT . LPAREN expression RPAREN

    LPAREN          shift and go to state 23


state 14

    (7) statement -> INSERT INTO . table LPAREN columns RPAREN VALUES LPAREN values RPAREN eos
    (23) table -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    table                          shift and go to state 24

state 15

    (8) statement -> UPDATE table . SET column EQUALS value WHERE condition eos

    SET             shift and go to state 25


state 16

    (23) table -> IDENTIFIER .

    SET             reduce using rule 23 (table -> IDENTIFIER .)
    LPAREN          reduce using rule 23 (table -> IDENTIFIER .)
    WHERE           reduce using rule 23 (table -> IDENTIFIER .)


state 17

    (9) statement -> DELETE FROM . table WHERE condition eos
    (23) table -> . IDENTIFIER

    IDENTIFIER      shift and go to state 16

    table                          shift and go to state 26

state 18

    (1) statement -> SET DATA FROM . FILE path eos

    FILE            shift and go to state 27


state 19

    (6) statement -> SELECT columns FROM . table_reference optional_clauses eos
    (12) table_reference -> . IDENTIFIER
    (13) table_reference -> . IDENTIFIER IDENTIFIER
    (14) table_reference -> . table_reference join_clause
    (15) table_reference -> . empty
    (42) empty -> .

    IDENTIFIER      shift and go to state 29
    INNER           reduce using rule 42 (empty -> .)
    WHERE           reduce using rule 42 (empty -> .)
    LIMIT           reduce using rule 42 (empty -> .)
    ORDER           reduce using rule 42 (empty -> .)
    SEMICOLON       reduce using rule 42 (empty -> .)

    table_reference                shift and go to state 28
    empty                          shift and go to state 30

state 20

    (16) columns -> columns COMMA . column
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    column                         shift and go to state 31
    aggregate_function             shift and go to state 12

state 21

    (22) column -> column AS . IDENTIFIER

    IDENTIFIER      shift and go to state 32


state 22

    (20) column -> IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 33


state 23

    (3) aggregate_function -> COUNT LPAREN . expression RPAREN
    (4) expression -> . IDENTIFIER
    (5) expression -> . ASTERISK

    IDENTIFIER      shift and go to state 35
    ASTERISK        shift and go to state 36

    expression                     shift and go to state 34

state 24

    (7) statement -> INSERT INTO table . LPAREN columns RPAREN VALUES LPAREN values RPAREN eos

    LPAREN          shift and go to state 37


state 25

    (8) statement -> UPDATE table SET . column EQUALS value WHERE condition eos
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    column                         shift and go to state 38
    aggregate_function             shift and go to state 12

state 26

    (9) statement -> DELETE FROM table . WHERE condition eos

    WHERE           shift and go to state 39


state 27

    (1) statement -> SET DATA FROM FILE . path eos
    (2) path -> . PATH

    PATH            shift and go to state 41

    path                           shift and go to state 40

state 28

    (6) statement -> SELECT columns FROM table_reference . optional_clauses eos
    (14) table_reference -> table_reference . join_clause
    (29) optional_clauses -> . where_clause limit_clause
    (30) optional_clauses -> . where_clause order_clause
    (31) optional_clauses -> . limit_clause
    (32) optional_clauses -> . order_clause
    (33) optional_clauses -> . where_clause
    (34) optional_clauses -> . empty
    (10) join_clause -> . INNER JOIN IDENTIFIER ON join_condition
    (39) where_clause -> . WHERE condition
    (40) limit_clause -> . LIMIT NUMBER
    (41) order_clause -> . ORDER BY column
    (42) empty -> .

    INNER           shift and go to state 48
    WHERE           shift and go to state 49
    LIMIT           shift and go to state 50
    ORDER           shift and go to state 51
    SEMICOLON       reduce using rule 42 (empty -> .)

    optional_clauses               shift and go to state 42
    join_clause                    shift and go to state 43
    where_clause                   shift and go to state 44
    limit_clause                   shift and go to state 45
    order_clause                   shift and go to state 46
    empty                          shift and go to state 47

state 29

    (12) table_reference -> IDENTIFIER .
    (13) table_reference -> IDENTIFIER . IDENTIFIER

    INNER           reduce using rule 12 (table_reference -> IDENTIFIER .)
    WHERE           reduce using rule 12 (table_reference -> IDENTIFIER .)
    LIMIT           reduce using rule 12 (table_reference -> IDENTIFIER .)
    ORDER           reduce using rule 12 (table_reference -> IDENTIFIER .)
    SEMICOLON       reduce using rule 12 (table_reference -> IDENTIFIER .)
    IDENTIFIER      shift and go to state 52


state 30

    (15) table_reference -> empty .

    INNER           reduce using rule 15 (table_reference -> empty .)
    WHERE           reduce using rule 15 (table_reference -> empty .)
    LIMIT           reduce using rule 15 (table_reference -> empty .)
    ORDER           reduce using rule 15 (table_reference -> empty .)
    SEMICOLON       reduce using rule 15 (table_reference -> empty .)


state 31

    (16) columns -> columns COMMA column .
    (22) column -> column . AS IDENTIFIER

    FROM            reduce using rule 16 (columns -> columns COMMA column .)
    COMMA           reduce using rule 16 (columns -> columns COMMA column .)
    RPAREN          reduce using rule 16 (columns -> columns COMMA column .)
    AS              shift and go to state 21


state 32

    (22) column -> column AS IDENTIFIER .

    AS              reduce using rule 22 (column -> column AS IDENTIFIER .)
    FROM            reduce using rule 22 (column -> column AS IDENTIFIER .)
    COMMA           reduce using rule 22 (column -> column AS IDENTIFIER .)
    RPAREN          reduce using rule 22 (column -> column AS IDENTIFIER .)
    EQUALS          reduce using rule 22 (column -> column AS IDENTIFIER .)
    GREATER         reduce using rule 22 (column -> column AS IDENTIFIER .)
    LESS            reduce using rule 22 (column -> column AS IDENTIFIER .)
    SEMICOLON       reduce using rule 22 (column -> column AS IDENTIFIER .)


state 33

    (20) column -> IDENTIFIER DOT IDENTIFIER .

    AS              reduce using rule 20 (column -> IDENTIFIER DOT IDENTIFIER .)
    FROM            reduce using rule 20 (column -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 20 (column -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 20 (column -> IDENTIFIER DOT IDENTIFIER .)
    EQUALS          reduce using rule 20 (column -> IDENTIFIER DOT IDENTIFIER .)
    GREATER         reduce using rule 20 (column -> IDENTIFIER DOT IDENTIFIER .)
    LESS            reduce using rule 20 (column -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 20 (column -> IDENTIFIER DOT IDENTIFIER .)


state 34

    (3) aggregate_function -> COUNT LPAREN expression . RPAREN

    RPAREN          shift and go to state 53


state 35

    (4) expression -> IDENTIFIER .

    RPAREN          reduce using rule 4 (expression -> IDENTIFIER .)


state 36

    (5) expression -> ASTERISK .

    RPAREN          reduce using rule 5 (expression -> ASTERISK .)


state 37

    (7) statement -> INSERT INTO table LPAREN . columns RPAREN VALUES LPAREN values RPAREN eos
    (16) columns -> . columns COMMA column
    (17) columns -> . ASTERISK
    (18) columns -> . column
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    ASTERISK        shift and go to state 10
    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    columns                        shift and go to state 54
    column                         shift and go to state 9
    aggregate_function             shift and go to state 12

state 38

    (8) statement -> UPDATE table SET column . EQUALS value WHERE condition eos
    (22) column -> column . AS IDENTIFIER

    EQUALS          shift and go to state 55
    AS              shift and go to state 21


state 39

    (9) statement -> DELETE FROM table WHERE . condition eos
    (35) condition -> . column EQUALS value
    (36) condition -> . column GREATER NUMBER
    (37) condition -> . column LESS NUMBER
    (38) condition -> . condition logical condition
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    condition                      shift and go to state 56
    column                         shift and go to state 57
    aggregate_function             shift and go to state 12

state 40

    (1) statement -> SET DATA FROM FILE path . eos
    (24) eos -> . SEMICOLON

    SEMICOLON       shift and go to state 59

    eos                            shift and go to state 58

state 41

    (2) path -> PATH .

    SEMICOLON       reduce using rule 2 (path -> PATH .)


state 42

    (6) statement -> SELECT columns FROM table_reference optional_clauses . eos
    (24) eos -> . SEMICOLON

    SEMICOLON       shift and go to state 59

    eos                            shift and go to state 60

state 43

    (14) table_reference -> table_reference join_clause .

    INNER           reduce using rule 14 (table_reference -> table_reference join_clause .)
    WHERE           reduce using rule 14 (table_reference -> table_reference join_clause .)
    LIMIT           reduce using rule 14 (table_reference -> table_reference join_clause .)
    ORDER           reduce using rule 14 (table_reference -> table_reference join_clause .)
    SEMICOLON       reduce using rule 14 (table_reference -> table_reference join_clause .)


state 44

    (29) optional_clauses -> where_clause . limit_clause
    (30) optional_clauses -> where_clause . order_clause
    (33) optional_clauses -> where_clause .
    (40) limit_clause -> . LIMIT NUMBER
    (41) order_clause -> . ORDER BY column

    SEMICOLON       reduce using rule 33 (optional_clauses -> where_clause .)
    LIMIT           shift and go to state 50
    ORDER           shift and go to state 51

    limit_clause                   shift and go to state 61
    order_clause                   shift and go to state 62

state 45

    (31) optional_clauses -> limit_clause .

    SEMICOLON       reduce using rule 31 (optional_clauses -> limit_clause .)


state 46

    (32) optional_clauses -> order_clause .

    SEMICOLON       reduce using rule 32 (optional_clauses -> order_clause .)


state 47

    (34) optional_clauses -> empty .

    SEMICOLON       reduce using rule 34 (optional_clauses -> empty .)


state 48

    (10) join_clause -> INNER . JOIN IDENTIFIER ON join_condition

    JOIN            shift and go to state 63


state 49

    (39) where_clause -> WHERE . condition
    (35) condition -> . column EQUALS value
    (36) condition -> . column GREATER NUMBER
    (37) condition -> . column LESS NUMBER
    (38) condition -> . condition logical condition
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    condition                      shift and go to state 64
    column                         shift and go to state 57
    aggregate_function             shift and go to state 12

state 50

    (40) limit_clause -> LIMIT . NUMBER

    NUMBER          shift and go to state 65


state 51

    (41) order_clause -> ORDER . BY column

    BY              shift and go to state 66


state 52

    (13) table_reference -> IDENTIFIER IDENTIFIER .

    INNER           reduce using rule 13 (table_reference -> IDENTIFIER IDENTIFIER .)
    WHERE           reduce using rule 13 (table_reference -> IDENTIFIER IDENTIFIER .)
    LIMIT           reduce using rule 13 (table_reference -> IDENTIFIER IDENTIFIER .)
    ORDER           reduce using rule 13 (table_reference -> IDENTIFIER IDENTIFIER .)
    SEMICOLON       reduce using rule 13 (table_reference -> IDENTIFIER IDENTIFIER .)


state 53

    (3) aggregate_function -> COUNT LPAREN expression RPAREN .

    AS              reduce using rule 3 (aggregate_function -> COUNT LPAREN expression RPAREN .)
    FROM            reduce using rule 3 (aggregate_function -> COUNT LPAREN expression RPAREN .)
    COMMA           reduce using rule 3 (aggregate_function -> COUNT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 3 (aggregate_function -> COUNT LPAREN expression RPAREN .)
    EQUALS          reduce using rule 3 (aggregate_function -> COUNT LPAREN expression RPAREN .)
    GREATER         reduce using rule 3 (aggregate_function -> COUNT LPAREN expression RPAREN .)
    LESS            reduce using rule 3 (aggregate_function -> COUNT LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 3 (aggregate_function -> COUNT LPAREN expression RPAREN .)


state 54

    (7) statement -> INSERT INTO table LPAREN columns . RPAREN VALUES LPAREN values RPAREN eos
    (16) columns -> columns . COMMA column

    RPAREN          shift and go to state 67
    COMMA           shift and go to state 20


state 55

    (8) statement -> UPDATE table SET column EQUALS . value WHERE condition eos
    (27) value -> . NUMBER
    (28) value -> . STRING

    NUMBER          shift and go to state 69
    STRING          shift and go to state 70

    value                          shift and go to state 68

state 56

    (9) statement -> DELETE FROM table WHERE condition . eos
    (38) condition -> condition . logical condition
    (24) eos -> . SEMICOLON
    (43) logical -> . AND
    (44) logical -> . OR

    SEMICOLON       shift and go to state 59
    AND             shift and go to state 73
    OR              shift and go to state 74

    eos                            shift and go to state 71
    logical                        shift and go to state 72

state 57

    (35) condition -> column . EQUALS value
    (36) condition -> column . GREATER NUMBER
    (37) condition -> column . LESS NUMBER
    (22) column -> column . AS IDENTIFIER

    EQUALS          shift and go to state 75
    GREATER         shift and go to state 76
    LESS            shift and go to state 77
    AS              shift and go to state 21


state 58

    (1) statement -> SET DATA FROM FILE path eos .

    $end            reduce using rule 1 (statement -> SET DATA FROM FILE path eos .)


state 59

    (24) eos -> SEMICOLON .

    $end            reduce using rule 24 (eos -> SEMICOLON .)


state 60

    (6) statement -> SELECT columns FROM table_reference optional_clauses eos .

    $end            reduce using rule 6 (statement -> SELECT columns FROM table_reference optional_clauses eos .)


state 61

    (29) optional_clauses -> where_clause limit_clause .

    SEMICOLON       reduce using rule 29 (optional_clauses -> where_clause limit_clause .)


state 62

    (30) optional_clauses -> where_clause order_clause .

    SEMICOLON       reduce using rule 30 (optional_clauses -> where_clause order_clause .)


state 63

    (10) join_clause -> INNER JOIN . IDENTIFIER ON join_condition

    IDENTIFIER      shift and go to state 78


state 64

    (39) where_clause -> WHERE condition .
    (38) condition -> condition . logical condition
    (43) logical -> . AND
    (44) logical -> . OR

    LIMIT           reduce using rule 39 (where_clause -> WHERE condition .)
    ORDER           reduce using rule 39 (where_clause -> WHERE condition .)
    SEMICOLON       reduce using rule 39 (where_clause -> WHERE condition .)
    AND             shift and go to state 73
    OR              shift and go to state 74

    logical                        shift and go to state 72

state 65

    (40) limit_clause -> LIMIT NUMBER .

    SEMICOLON       reduce using rule 40 (limit_clause -> LIMIT NUMBER .)


state 66

    (41) order_clause -> ORDER BY . column
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    column                         shift and go to state 79
    aggregate_function             shift and go to state 12

state 67

    (7) statement -> INSERT INTO table LPAREN columns RPAREN . VALUES LPAREN values RPAREN eos

    VALUES          shift and go to state 80


state 68

    (8) statement -> UPDATE table SET column EQUALS value . WHERE condition eos

    WHERE           shift and go to state 81


state 69

    (27) value -> NUMBER .

    WHERE           reduce using rule 27 (value -> NUMBER .)
    SEMICOLON       reduce using rule 27 (value -> NUMBER .)
    AND             reduce using rule 27 (value -> NUMBER .)
    OR              reduce using rule 27 (value -> NUMBER .)
    LIMIT           reduce using rule 27 (value -> NUMBER .)
    ORDER           reduce using rule 27 (value -> NUMBER .)
    RPAREN          reduce using rule 27 (value -> NUMBER .)
    COMMA           reduce using rule 27 (value -> NUMBER .)


state 70

    (28) value -> STRING .

    WHERE           reduce using rule 28 (value -> STRING .)
    SEMICOLON       reduce using rule 28 (value -> STRING .)
    AND             reduce using rule 28 (value -> STRING .)
    OR              reduce using rule 28 (value -> STRING .)
    LIMIT           reduce using rule 28 (value -> STRING .)
    ORDER           reduce using rule 28 (value -> STRING .)
    RPAREN          reduce using rule 28 (value -> STRING .)
    COMMA           reduce using rule 28 (value -> STRING .)


state 71

    (9) statement -> DELETE FROM table WHERE condition eos .

    $end            reduce using rule 9 (statement -> DELETE FROM table WHERE condition eos .)


state 72

    (38) condition -> condition logical . condition
    (35) condition -> . column EQUALS value
    (36) condition -> . column GREATER NUMBER
    (37) condition -> . column LESS NUMBER
    (38) condition -> . condition logical condition
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    condition                      shift and go to state 82
    column                         shift and go to state 57
    aggregate_function             shift and go to state 12

state 73

    (43) logical -> AND .

    IDENTIFIER      reduce using rule 43 (logical -> AND .)
    COUNT           reduce using rule 43 (logical -> AND .)


state 74

    (44) logical -> OR .

    IDENTIFIER      reduce using rule 44 (logical -> OR .)
    COUNT           reduce using rule 44 (logical -> OR .)


state 75

    (35) condition -> column EQUALS . value
    (27) value -> . NUMBER
    (28) value -> . STRING

    NUMBER          shift and go to state 69
    STRING          shift and go to state 70

    value                          shift and go to state 83

state 76

    (36) condition -> column GREATER . NUMBER

    NUMBER          shift and go to state 84


state 77

    (37) condition -> column LESS . NUMBER

    NUMBER          shift and go to state 85


state 78

    (10) join_clause -> INNER JOIN IDENTIFIER . ON join_condition

    ON              shift and go to state 86


state 79

    (41) order_clause -> ORDER BY column .
    (22) column -> column . AS IDENTIFIER

    SEMICOLON       reduce using rule 41 (order_clause -> ORDER BY column .)
    AS              shift and go to state 21


state 80

    (7) statement -> INSERT INTO table LPAREN columns RPAREN VALUES . LPAREN values RPAREN eos

    LPAREN          shift and go to state 87


state 81

    (8) statement -> UPDATE table SET column EQUALS value WHERE . condition eos
    (35) condition -> . column EQUALS value
    (36) condition -> . column GREATER NUMBER
    (37) condition -> . column LESS NUMBER
    (38) condition -> . condition logical condition
    (19) column -> . IDENTIFIER
    (20) column -> . IDENTIFIER DOT IDENTIFIER
    (21) column -> . aggregate_function
    (22) column -> . column AS IDENTIFIER
    (3) aggregate_function -> . COUNT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 11
    COUNT           shift and go to state 13

    column                         shift and go to state 57
    condition                      shift and go to state 88
    aggregate_function             shift and go to state 12

state 82

    (38) condition -> condition logical condition .
    (38) condition -> condition . logical condition
    (43) logical -> . AND
    (44) logical -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 38 (condition -> condition logical condition .)
    LIMIT           reduce using rule 38 (condition -> condition logical condition .)
    ORDER           reduce using rule 38 (condition -> condition logical condition .)
    AND             shift and go to state 73
    OR              shift and go to state 74

  ! AND             [ reduce using rule 38 (condition -> condition logical condition .) ]
  ! OR              [ reduce using rule 38 (condition -> condition logical condition .) ]

    logical                        shift and go to state 72

state 83

    (35) condition -> column EQUALS value .

    SEMICOLON       reduce using rule 35 (condition -> column EQUALS value .)
    AND             reduce using rule 35 (condition -> column EQUALS value .)
    OR              reduce using rule 35 (condition -> column EQUALS value .)
    LIMIT           reduce using rule 35 (condition -> column EQUALS value .)
    ORDER           reduce using rule 35 (condition -> column EQUALS value .)


state 84

    (36) condition -> column GREATER NUMBER .

    SEMICOLON       reduce using rule 36 (condition -> column GREATER NUMBER .)
    AND             reduce using rule 36 (condition -> column GREATER NUMBER .)
    OR              reduce using rule 36 (condition -> column GREATER NUMBER .)
    LIMIT           reduce using rule 36 (condition -> column GREATER NUMBER .)
    ORDER           reduce using rule 36 (condition -> column GREATER NUMBER .)


state 85

    (37) condition -> column LESS NUMBER .

    SEMICOLON       reduce using rule 37 (condition -> column LESS NUMBER .)
    AND             reduce using rule 37 (condition -> column LESS NUMBER .)
    OR              reduce using rule 37 (condition -> column LESS NUMBER .)
    LIMIT           reduce using rule 37 (condition -> column LESS NUMBER .)
    ORDER           reduce using rule 37 (condition -> column LESS NUMBER .)


state 86

    (10) join_clause -> INNER JOIN IDENTIFIER ON . join_condition
    (11) join_condition -> . IDENTIFIER EQUALS IDENTIFIER

    IDENTIFIER      shift and go to state 89

    join_condition                 shift and go to state 90

state 87

    (7) statement -> INSERT INTO table LPAREN columns RPAREN VALUES LPAREN . values RPAREN eos
    (25) values -> . values COMMA value
    (26) values -> . value
    (27) value -> . NUMBER
    (28) value -> . STRING

    NUMBER          shift and go to state 69
    STRING          shift and go to state 70

    values                         shift and go to state 91
    value                          shift and go to state 92

state 88

    (8) statement -> UPDATE table SET column EQUALS value WHERE condition . eos
    (38) condition -> condition . logical condition
    (24) eos -> . SEMICOLON
    (43) logical -> . AND
    (44) logical -> . OR

    SEMICOLON       shift and go to state 59
    AND             shift and go to state 73
    OR              shift and go to state 74

    eos                            shift and go to state 93
    logical                        shift and go to state 72

state 89

    (11) join_condition -> IDENTIFIER . EQUALS IDENTIFIER

    EQUALS          shift and go to state 94


state 90

    (10) join_clause -> INNER JOIN IDENTIFIER ON join_condition .

    INNER           reduce using rule 10 (join_clause -> INNER JOIN IDENTIFIER ON join_condition .)
    WHERE           reduce using rule 10 (join_clause -> INNER JOIN IDENTIFIER ON join_condition .)
    LIMIT           reduce using rule 10 (join_clause -> INNER JOIN IDENTIFIER ON join_condition .)
    ORDER           reduce using rule 10 (join_clause -> INNER JOIN IDENTIFIER ON join_condition .)
    SEMICOLON       reduce using rule 10 (join_clause -> INNER JOIN IDENTIFIER ON join_condition .)


state 91

    (7) statement -> INSERT INTO table LPAREN columns RPAREN VALUES LPAREN values . RPAREN eos
    (25) values -> values . COMMA value

    RPAREN          shift and go to state 95
    COMMA           shift and go to state 96


state 92

    (26) values -> value .

    RPAREN          reduce using rule 26 (values -> value .)
    COMMA           reduce using rule 26 (values -> value .)


state 93

    (8) statement -> UPDATE table SET column EQUALS value WHERE condition eos .

    $end            reduce using rule 8 (statement -> UPDATE table SET column EQUALS value WHERE condition eos .)


state 94

    (11) join_condition -> IDENTIFIER EQUALS . IDENTIFIER

    IDENTIFIER      shift and go to state 97


state 95

    (7) statement -> INSERT INTO table LPAREN columns RPAREN VALUES LPAREN values RPAREN . eos
    (24) eos -> . SEMICOLON

    SEMICOLON       shift and go to state 59

    eos                            shift and go to state 98

state 96

    (25) values -> values COMMA . value
    (27) value -> . NUMBER
    (28) value -> . STRING

    NUMBER          shift and go to state 69
    STRING          shift and go to state 70

    value                          shift and go to state 99

state 97

    (11) join_condition -> IDENTIFIER EQUALS IDENTIFIER .

    INNER           reduce using rule 11 (join_condition -> IDENTIFIER EQUALS IDENTIFIER .)
    WHERE           reduce using rule 11 (join_condition -> IDENTIFIER EQUALS IDENTIFIER .)
    LIMIT           reduce using rule 11 (join_condition -> IDENTIFIER EQUALS IDENTIFIER .)
    ORDER           reduce using rule 11 (join_condition -> IDENTIFIER EQUALS IDENTIFIER .)
    SEMICOLON       reduce using rule 11 (join_condition -> IDENTIFIER EQUALS IDENTIFIER .)


state 98

    (7) statement -> INSERT INTO table LPAREN columns RPAREN VALUES LPAREN values RPAREN eos .

    $end            reduce using rule 7 (statement -> INSERT INTO table LPAREN columns RPAREN VALUES LPAREN values RPAREN eos .)


state 99

    (25) values -> values COMMA value .

    RPAREN          reduce using rule 25 (values -> values COMMA value .)
    COMMA           reduce using rule 25 (values -> values COMMA value .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
